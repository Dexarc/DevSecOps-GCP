# .github/workflows/ci-cd.yml

name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_and_push_docker_image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      # - name: Clean code
      #   run: |
      #     sudo apt-get remove docker docker-engine docker.io containerd containerd.io
      #     sudo apt-get autoclean
      #     sudo apt-get autoremove

      # - name: Set up Docker Buildx
      #   run: |
      #     sudo apt-get update -qy
      #     sudo apt-get install -y docker.io
      #     docker version
      #     docker buildx version

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
        with:
          dockerfile: app/Dockerfile
          context: app/

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Install dependencies
        working-directory: app/
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build and Push Docker Image with Latest Tag
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          echo "$GCP_SERVICE_ACCOUNT_KEY" | docker login -u _json_key --password-stdin https://gcr.io
          docker build --platform linux/amd64 -t gcr.io/$PROJECT_ID/your-node-app:latest -t gcr.io/$PROJECT_ID/your-node-app:$GITHUB_SHA ./app
          docker push gcr.io/$PROJECT_ID/your-node-app:latest
          docker push gcr.io/$PROJECT_ID/your-node-app:$GITHUB_SHA
          
  # terraform_apply:
  #   needs: build_and_push_docker_image
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2

  #     - name: Set up Terraform
  #       uses: hashicorp/setup-terraform@v1

  #     - name: Set up Service Account Key as Environment Variable
  #       run: echo "$GCP_SA_KEY" > /tmp/gcp_sa_key.json
  #       env:
  #         GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

  #     - name: Terraform Init
  #       run: terraform init

  #     - name: Terraform Apply
  #       env:
  #         GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  #       working-directory: terraform
  #       run: terraform apply -auto-approve -var="gcp_project=${GCP_PROJECT_ID}" -var="service_account_key_file=/tmp/gcp_sa_key.json"

  deploy_to_cloud_run:
    needs: build_and_push_docker_image
    runs-on: ubuntu-latest

    steps:
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.4.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Deploy to Google Cloud Run
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          gcloud auth configure-docker
          docker pull gcr.io/$PROJECT_ID/your-node-app:$GITHUB_SHA
          docker tag gcr.io/$PROJECT_ID/your-node-app:$GITHUB_SHA gcr.io/$PROJECT_ID/your-node-app:latest
          gcloud run deploy your-node-app \
            --image gcr.io/$PROJECT_ID/your-node-app:latest \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated
 